<%- include("Header") %>

<div class="container">
  <div class="page-inner">
    <div class="row">
      <div class="col-md-12">
        <div class="card">
          <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
              <div class="dataTables_length">
                <label>Show 
                  <select name="multi-filter-select_length" id="rows-per-page" class="form-control form-control-sm">
                    <option value="10">10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                  </select> entries
                </label>
              </div>
              <div class="dataTables_filter">
                <label>Search:
                  <div class="input-group">
                    <input type="search" id="search-input" class="form-control form-control-sm" placeholder="Search products..." aria-controls="multi-filter-select">
                    <div class="input-group-append">
                      <button class="btn btn-sm btn-primary" id="search-button" type="button">
                        <i class="fa fa-search"></i>
                      </button>
                    </div>
                  </div>
                </label>
              </div>
            </div>
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <form action="/api/setbestproductlist"  method="post">
              <table id="multi-filter-select" class="display table table-hover">
                <thead class="bg-light">
                  <tr>
                    <th>Best Product <button class="btn btn-primary" type="submit">submit</button></th>
                    <th class="sortable" data-column="1">Model Number <i class="fa fa-sort ml-1"></i></th>
                    <th class="sortable" data-column="2">Product Name <i class="fa fa-sort ml-1"></i></th>
                    <th class="sortable" data-column="3">Category <i class="fa fa-sort ml-1"></i></th>
                    <th class="sortable text-right" data-column="4">Discounted (₹) <i class="fa fa-sort ml-1"></i></th>
                    <th class="sortable text-right" data-column="5">Price ($) <i class="fa fa-sort ml-1"></i></th>
                    <th class="sortable text-right" data-column="6">Original Price (₹) <i class="fa fa-sort ml-1"></i></th>
                    <th class="sortable" data-column="7">Crystal Type <i class="fa fa-sort ml-1"></i></th>
                    <th>Image</th>
                    <th class="text-center">Actions</th>
                  </tr>
                </thead>
                <tbody id="table-body">
                  <% if (allProductData && allProductData.length > 0) { %>
                    <% allProductData.forEach((product) => { %>
                      <tr data-product-id="<%= product._id %>" data-description="<%= product.description || '' %>">
                        <td class="text-center">
                          <div class="custom-control custom-checkbox d-inline-block">
                            <input type="checkbox" class="custom-control-input"
                                   id="best-product-<%= product._id %>"
                                   name="bestProducts"
                                 <%= product.bestproduct ? 'checked' : '' %>
                                 value="<%= product._id %>" />
                            <label class="custom-control-label" for="best-product-<%= product._id %>"></label>
                          </div>
                        </td>
                        <td class="font-weight-bold"><%= product.modelNumber %></td>
                        <td class="font-weight-bold"><%= product.productName %></td>
                        <td><span class="badge badge-info"><%= product.category %></span></td>
                        <td class="text-right <%= product.discountedPrice ? 'text-danger font-weight-bold' : '' %>">
                          <%= product.discountedPrice || '-' %>
                        </td>
                        <td class="text-right"><%= product.dollarPrice || '-' %></td>
                        <td class="text-right"><%= product.originalPrice %></td>
                        <td><%= product.crystalType %></td>
                        <td>
                          <div class="product-img-container">
                            <img src="<%= product.mainImage.url %>" class="img-thumbnail" alt="Product Image" 
                                 data-public-id="<%=product.mainImage.public_id%>">
                          </div>
                        </td>
                        <td class="text-center">
                          <div class="btn-group btn-group-sm" role="group">
                            <a href="/admin/EditPage/?id=<%= product._id %>" class="btn btn-primary btn-sm" title="Edit">
                              <i class="fa fa-pen"></i>
                            </a>
                            <a href="/admin/deleteProduct/?id=<%= product._id %>" class="btn btn-danger btn-sm" title="Delete" onclick="return confirm('Are you sure you want to delete this product?')">
                              <i class="fa fa-trash"></i>
                            </a>
                          </div>
                        </td>
                      </tr>
                    <% }) %>
                  <% } else { %>
                    <tr id="no-products-row">
                      <td colspan="10" class="text-center py-4">
                        <div class="empty-state">
                          <i class="fa fa-box-open fa-3x text-muted mb-3"></i>
                          <h4>No products found</h4>
                          <p class="text-muted">Add your first product to get started</p>
                          <a href="/admin/addProduct" class="btn btn-primary">
                            <i class="fa fa-plus"></i> Add Product
                          </a>
                        </div>
                      </td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
document.addEventListener('DOMContentLoaded', function () {
  let currentPage = 1;
  let rowsPerPage = parseInt(document.getElementById('rows-per-page').value);
  let sortColumn = -1;
  let sortDirection = 'asc';
  let searchQuery = '';

  const tableBody = document.getElementById('table-body');
  const noProductsRow = document.getElementById('no-products-row');

  function getAllRows() {
    return Array.from(tableBody.querySelectorAll('tr')).filter(row => !row.id.includes("no-products-row"));
  }

  function getSortValue(row, column) {
    const cell = row.cells[column];
    if (!cell) return '';
    return cell.textContent.trim().toLowerCase();
  }

  function updateTable() {
    let allRows = getAllRows();

    // Search filter
    let filteredRows = allRows.filter(row => {
      if (!searchQuery) return true;
      return [...row.cells].some(cell => cell.textContent.toLowerCase().includes(searchQuery));
    });

    // Sort
    if (sortColumn >= 0) {
      filteredRows.sort((a, b) => {
        const aVal = getSortValue(a, sortColumn);
        const bVal = getSortValue(b, sortColumn);
        if (aVal < bVal) return sortDirection === 'asc' ? -1 : 1;
        if (aVal > bVal) return sortDirection === 'asc' ? 1 : -1;
        return 0;
      });
    }

    // Pagination
    const totalRows = filteredRows.length;
    const totalPages = Math.ceil(totalRows / rowsPerPage);
    const startIndex = (currentPage - 1) * rowsPerPage;
    const endIndex = Math.min(startIndex + rowsPerPage, totalRows);

    // Hide all, then show relevant
    allRows.forEach(row => row.style.display = 'none');
    for (let i = startIndex; i < endIndex; i++) {
      filteredRows[i].style.display = '';
    }

    if (noProductsRow) noProductsRow.style.display = totalRows === 0 ? '' : 'none';

    updatePagination(totalPages, startIndex, endIndex, totalRows);
  }

  function updatePagination(totalPages, start, end, total) {
    const info = document.querySelector('#table-info');
    if (info) {
      info.textContent = `Showing ${total === 0 ? 0 : start + 1} to ${end} of ${total} entries`;
    }

    const pagination = document.getElementById('pagination');
    if (!pagination) return;

    pagination.innerHTML = '';
    const createBtn = (text, page, disabled = false, icon = '') => {
      const li = document.createElement('li');
      li.className = `paginate_button page-item ${page === currentPage ? 'active' : ''} ${disabled ? 'disabled' : ''}`;
      li.innerHTML = `<a href="#" class="page-link">${icon || text}</a>`;
      if (!disabled) {
        li.addEventListener('click', e => {
          e.preventDefault();
          currentPage = page;
          updateTable();
        });
      }
      return li;
    };

    pagination.appendChild(createBtn('', currentPage - 1, currentPage === 1, '<i class="fa fa-chevron-left"></i>'));
    for (let i = 1; i <= totalPages; i++) {
      pagination.appendChild(createBtn(i, i));
    }
    pagination.appendChild(createBtn('', currentPage + 1, currentPage === totalPages, '<i class="fa fa-chevron-right"></i>'));
  }

  document.getElementById('search-button').addEventListener('click', () => {
    searchQuery = document.getElementById('search-input').value.toLowerCase();
    currentPage = 1;
    updateTable();
  });

  document.getElementById('search-input').addEventListener('keyup', (e) => {
    if (e.key === 'Enter') {
      searchQuery = e.target.value.toLowerCase();
      currentPage = 1;
      updateTable();
    }
  });

  document.getElementById('rows-per-page').addEventListener('change', function () {
    rowsPerPage = parseInt(this.value);
    currentPage = 1;
    updateTable();
  });

  document.querySelectorAll('.sortable').forEach(header => {
    header.addEventListener('click', function () {
      const column = parseInt(this.getAttribute('data-column'));
      if (sortColumn === column) {
        sortDirection = sortDirection === 'asc' ? 'desc' : 'asc';
      } else {
        sortColumn = column;
        sortDirection = 'asc';
      }

      document.querySelectorAll('.sortable').forEach(h => {
        h.classList.remove('sort-asc', 'sort-desc');
        h.querySelector('i').className = 'fa fa-sort ml-1';
      });
      this.classList.add(sortDirection === 'asc' ? 'sort-asc' : 'sort-desc');
      this.querySelector('i').className = sortDirection === 'asc' ? 'fa fa-sort-up ml-1' : 'fa fa-sort-down ml-1';

      updateTable();
    });
  });

  updateTable();
});
</script>



<%- include("Footer") %>
s