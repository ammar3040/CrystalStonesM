<%- include("Header") %>

<div class="container">
  <div class="page-inner">
    <div class="page-header">
      <h3 class="fw-bold mb-3">User Management</h3>
      <ul class="breadcrumbs mb-3">
        <li class="nav-home">
          <a href="#">
            <i class="icon-home"></i>
          </a>
        </li>
        <li class="separator">
          <i class="icon-arrow-right"></i>
        </li>
        <li class="nav-item">
          <a href="#">Users</a>
        </li>
        <li class="separator">
          <i class="icon-arrow-right"></i>
        </li>
        <li class="nav-item">
          <a href="#">All Users</a>
        </li>
      </ul>
    </div>
    <div class="row">
      <div class="col-md-12">
        <div class="card">
          <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
              <div class="dataTables_length">
                <label>Show 
                  <select name="user-table_length" id="rows-per-page" class="form-control form-control-sm">
                    <option value="5">5</option>
                    <option value="10" selected>10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                  </select> entries
                </label>
              </div>
              <div class="dataTables_filter">
                <label>Search:
                  <div class="input-group">
                    <input type="search" id="search-input" class="form-control form-control-sm" placeholder="Search users..." aria-controls="user-table">
                    <div class="input-group-append">
                      <button class="btn btn-sm btn-primary" id="search-button" type="button">
                        <i class="fa fa-search"></i>
                      </button>
                    </div>
                  </div>
                </label>
              </div>
            </div>
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <table id="user-table" class="display table table-hover">
                <thead class="bg-light">
                  <tr>
                   
                    <th class="sortable" data-column="1">Name <i class="fa fa-sort ml-1"></i></th>
                    <th class="sortable" data-column="2">Email <i class="fa fa-sort ml-1"></i></th>
                    <th class="sortable" data-column="3">Mobile <i class="fa fa-sort ml-1"></i></th>
                    <th class="sortable" data-column="4">Address <i class="fa fa-sort ml-1"></i></th>
                    <th class="sortable" data-column="5">Role <i class="fa fa-sort ml-1"></i></th>
                    <th class="sortable" data-column="6">Joined Date <i class="fa fa-sort ml-1"></i></th>
                    <th class="text-center">Actions</th>
                  </tr>
                </thead>
                <tbody id="table-body">
                  <% if (AllUserData && AllUserData.length > 0) { %>
                    <% AllUserData.forEach(user => { %>
                      <tr data-user-id="<%= user._id %>">
                    
                        <td class="font-weight-bold"><%= user.Uname %></td>
                        <td><%= user.email || 'N/A' %></td>
                        <td><%= user.mobile || 'N/A' %></td>
                        <td><%= user.address || 'N/A' %></td>
                        <td>
                          <span class="badge <%= user.role === 'admin' ? 'badge-success' : 'badge-primary' %>">
                            <%= user.role %>
                          </span>
                        </td>
                        <td><%= new Date(user.createdAt).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %></td>
                        <td class="text-center">
                          <div class="btn-group btn-group-sm" role="group">
                          
                            <a href="/admin/userdelete/?uid=<%=user._id%>" class="btn btn-danger btn-sm delete-user" title="Delete" data-id="<%= user._id %>">
                              <i class="fa fa-trash"></i> 
                          </a>
                          </div>
                        </td>
                      </tr>
                    <% }); %>
                  <% } else { %>
                    <tr id="no-users-row">
                      <td colspan="8" class="text-center py-4">
                        <div class="empty-state">
                          <i class="fa fa-user-times fa-3x text-muted mb-3"></i>
                          <h4>No users found</h4>
                          <p class="text-muted">There are currently no users in the system</p>
                        </div>
                      </td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
            <div class="row mt-3">
              <div class="col-sm-12 col-md-5">
                <div class="dataTables_info" id="table-info">
                  <% if (AllUserData && AllUserData.length > 0) { %>
                    Showing 1 to <%= Math.min(AllUserData.length, 10) %> of <%= AllUserData.length %> entries
                  <% } else { %>
                    Showing 0 to 0 of 0 entries
                  <% } %>
                </div>
              </div>
              <div class="col-sm-12 col-md-7">
                <div class="dataTables_paginate">
                  <ul class="pagination pagination-rounded" id="pagination">
                    <% if (AllUserData && AllUserData.length > 0) { %>
                      <li class="paginate_button page-item previous disabled">
                        <a href="#" class="page-link"><i class="fa fa-chevron-left"></i></a>
                      </li>
                      <li class="paginate_button page-item active">
                        <a href="#" class="page-link">1</a>
                      </li>
                      <li class="paginate_button page-item next <%= AllUserData.length <= 10 ? 'disabled' : '' %>">
                        <a href="#" class="page-link"><i class="fa fa-chevron-right"></i></a>
                      </li>
                    <% } %>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .sortable {
    cursor: pointer;
    position: relative;
  }
  
  .sortable:hover {
    background-color: #f1f1f1;
  }
  
  .sort-asc i.fa-sort:before {
    content: "\f0de";
    color: #007bff;
  }
  
  .sort-desc i.fa-sort:before {
    content: "\f0dd";
    color: #007bff;
  }
  
  .badge {
    font-size: 0.8em;
    font-weight: 500;
    padding: 4px 8px;
  }
  
  .badge-primary {
    background-color: #007bff;
  }
  
  .badge-success {
    background-color: #28a745;
  }
  
  .empty-state {
    padding: 20px;
    background-color: #f8f9fa;
    border-radius: 8px;
  }
  
  /* Add some animation to actions */
  .btn-group .btn {
    transition: all 0.2s ease;
  }
  
  .btn-group .btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  let currentPage = 1;
  let rowsPerPage = parseInt(document.getElementById('rows-per-page').value);
  let sortColumn = 0;
  let sortDirection = 'asc';
  let searchQuery = '';

  const tableBody = document.getElementById('table-body');
  const noUsersRow = document.getElementById('no-users-row');

  function getAllRows() {
    return Array.from(tableBody.querySelectorAll('tr:not(#no-users-row)'));
  }

  // Setup rows
  function updateTable() {
    let allRows = getAllRows();

    // Filter rows
    let filteredRows = allRows.filter(row => {
      if (!searchQuery) return true;
      return [...row.cells].some(cell => cell.textContent.toLowerCase().includes(searchQuery));
    });

    // Sort rows
    filteredRows.sort((a, b) => {
      const aVal = getSortValue(a, sortColumn);
      const bVal = getSortValue(b, sortColumn);

      if (aVal < bVal) return sortDirection === 'asc' ? -1 : 1;
      if (aVal > bVal) return sortDirection === 'asc' ? 1 : -1;
      return 0;
    });

    // Pagination
    const totalRows = filteredRows.length;
    const totalPages = Math.ceil(totalRows / rowsPerPage);
    const startIndex = (currentPage - 1) * rowsPerPage;
    const endIndex = Math.min(startIndex + rowsPerPage, totalRows);

    // Hide all
    allRows.forEach(row => row.style.display = 'none');
    for (let i = startIndex; i < endIndex; i++) {
      filteredRows[i].style.display = '';
    }

    // Show/hide "No users"
    if (noUsersRow) noUsersRow.style.display = totalRows === 0 ? '' : 'none';

    document.getElementById('table-info').textContent =
      `Showing ${totalRows === 0 ? 0 : startIndex + 1} to ${endIndex} of ${totalRows} entries`;

    updatePagination(totalPages);
    setupActionButtons();
  }

  function getSortValue(row, column) {
    const cell = row.cells[column];
    if (!cell) return '';
    if (column === 6) return new Date(cell.textContent.trim());
    return cell.textContent.trim().toLowerCase();
  }

  function updatePagination(totalPages) {
    const pagination = document.getElementById('pagination');
    pagination.innerHTML = '';

    const createButton = (text, disabled, page, icon = '') => {
      const li = document.createElement('li');
      li.className = `paginate_button page-item ${disabled ? 'disabled' : ''} ${page === currentPage ? 'active' : ''}`;
      li.innerHTML = `<a href="#" class="page-link">${icon || text}</a>`;
      if (!disabled) {
        li.addEventListener('click', e => {
          e.preventDefault();
          currentPage = page;
          updateTable();
        });
      }
      return li;
    };

    pagination.appendChild(createButton('', currentPage === 1, currentPage - 1, '<i class="fa fa-chevron-left"></i>'));

    for (let i = 1; i <= totalPages; i++) {
      pagination.appendChild(createButton(i, false, i));
    }

    pagination.appendChild(createButton('', currentPage === totalPages, currentPage + 1, '<i class="fa fa-chevron-right"></i>'));
  }

  function setupActionButtons() {
    document.querySelectorAll('.edit-user').forEach(btn => {
      btn.onclick = () => {
        const userId = btn.getAttribute('data-id');
        window.location.href = `/users/edit/${userId}`;
      };
    });

    document.querySelectorAll('.delete-user').forEach(btn => {
      btn.onclick = () => {
        const userId = btn.getAttribute('data-id');
        if (confirm('Are you sure you want to delete this user?')) {
          fetch(`/users/delete/${userId}`, {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' }
          })
          .then(res => res.json())
          .then(data => {
            if (data.success) {
              const row = document.querySelector(`tr[data-user-id="${userId}"]`);
              if (row) {
                row.remove();
                updateTable();
              }
            } else {
              alert(data.message || 'Delete failed');
            }
   ;       })
        }
      };
    });
  }

  // Search and filter
  document.getElementById('rows-per-page').addEventListener('change', function () {
    rowsPerPage = parseInt(this.value);
    currentPage = 1;
    updateTable();
  });

  document.getElementById('search-button').addEventListener('click', () => {
    searchQuery = document.getElementById('search-input').value.toLowerCase();
    currentPage = 1;
    updateTable();
  });

  document.getElementById('search-input').addEventListener('keyup', function (e) {
    if (e.key === 'Enter') {
      searchQuery = this.value.toLowerCase();
      currentPage = 1;
      updateTable();
    }
  });

  // Sorting
  document.querySelectorAll('.sortable').forEach(header => {
    header.addEventListener('click', function () {
      const column = parseInt(this.getAttribute('data-column'));
      if (column === sortColumn) {
        sortDirection = sortDirection === 'asc' ? 'desc' : 'asc';
      } else {
        sortColumn = column;
        sortDirection = 'asc';
      }

      // Update sort icons
      document.querySelectorAll('.sortable').forEach(h => {
        h.classList.remove('sort-asc', 'sort-desc');
        h.querySelector('i').className = 'fa fa-sort ml-1';
      });
      this.classList.add(sortDirection === 'asc' ? 'sort-asc' : 'sort-desc');
      this.querySelector('i').className = sortDirection === 'asc' ? 'fa fa-sort-up ml-1' : 'fa fa-sort-down ml-1';

      updateTable();
    });
  });

  // Initial table update
  updateTable();
});
</script>


<%- include("Footer") %>